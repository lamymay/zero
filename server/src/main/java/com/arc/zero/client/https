# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # 打开压缩
    gzip on;

    #低于1kb的资源不压缩
    gzip_min_length 1k;

    #压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多，建议设置在4左右。
    gzip_comp_level 4;

    #需要压缩哪些响应类型的资源，多个空格隔开。不建议å压缩图片，下面会讲为什么。
    gzip_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css;

    #配置禁用gzip条件，支持正则。此处表示ie6及以下不启用gzip（因为ie低版本不支持）
    gzip_disable "MSIE [1-6]\.";

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 1024M;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
#        listen       80 default_server;
#        listen       [::]:80 default_server;
        listen       443 ssl http2 default_server;
        listen       [::]:443 ssl http2 default_server;
        server_name  _;
        root         /data/web;

        #root         /usr/share/nginx/html;
        include /etc/nginx/default.d/*.conf;

        ssl_certificate "/etc/nginx/ssl/ray_ski.crt";
        ssl_certificate_key "/etc/nginx/ssl/ray_ski.key";
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;



        # nginx配置  for react web
        location / {
#         rewrite .* /index.html break;
#         index index.html ;
         try_files $uri /index.html;
        }

        # 8003
        location /test{
         proxy_pass http://127.0.0.1:8003;
        }


        # 8001 contxt-path is zero
        location /zero{
         proxy_pass http://127.0.0.1:8001;
        }

        #  doc

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
    }


}
