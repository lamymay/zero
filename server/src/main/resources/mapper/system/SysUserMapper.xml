<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.arc.zero.mapper.system.SysUserMapper">
    <resultMap id="user" type="com.arc.core.model.domain.system.SysUser">
        <id property="id" column="user_id" javaType="long" jdbcType="BIGINT"/>
        <result property="nickname" column="user_nickname" javaType="string" jdbcType="VARCHAR"/>
        <result property="avatar" column="user_avatar" javaType="string" jdbcType="VARCHAR"/>
        <result property="state" column="user_state" javaType="int" jdbcType="INTEGER"/>
        <result property="createDate" column="user_create_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="user_update_date" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--
    总结 一张表对应的实体类，
    2如果实体类中 ，有其他实体用 association 标签来表示，注意有两种，一种是立刻查出来映射出来，第二中是额外sql方式 , 参考范例：userWithAuth userWithAuthExtraSQL
    2如果有list时候那么映射的时候是用 collection  标签 写法相对唯一
    -->
    <!--对象中包含的一个对象  直接查出来作了映射， 注意此处结果集做了复用   -->
    <resultMap id="userWithAuth" extends="user" type="com.arc.core.model.domain.system.SysUser">
        <association property="auth" javaType="com.arc.core.model.domain.system.SysUserAuth"
                     resultMap="com.arc.zero.mapper.system.SysUserAuthMapper.auth"/>
    </resultMap>

    <!--对象中包含的一个对象  额外sql  -->
    <!--
            <resultMap id="userWithAuthExtraSQL" extends="user" type="com.arc.core.model.domain.system.SysUser">
                <association property="auth" column="user_id" select="SysUserAuthMapper.get"/>
            </resultMap>
    -->

    <!--对象中包含的是一个集合属性 -->
    <!--
        <resultMap id="userWithAuthorizations" extends="user" type="com.arc.core.model.domain.system.SysUser">
            <association property="auth" column="user_id" select="com.arc.zero.mapper.system.SysUserAuthMapper.get"/>
            &lt;!&ndash;<collection property="auths" ofType="com.arc.core.model.domain.system.SysUserAuth"&ndash;&gt;
                        &lt;!&ndash;resultMap="com.arc.zero.mapper.system.SysUserAuthMapper.auth"></collection>&ndash;&gt;
            &lt;!&ndash;<collection property="areas" ofType="cn.com.besttone.csp.model.sys.Area"&ndash;&gt;
                        &lt;!&ndash;resultMap="cn.com.besttone.csp.ms.mapper.AreaMapper.area"></collection>&ndash;&gt;
        </resultMap>
    -->


    <sql id="sysUserColumns">
            user_.id AS user_id,
            user_.`nickname` AS user_nickname,
            user_.`avatar` AS user_avatar,
            user_.`state` AS user_state,
            user_.create_date AS user_create_date,
            user_.update_date AS user_update_date
    </sql>

    <delete id="delete" parameterType="long">
        DELETE FROM  t_sys_user
        WHERE  id = #{id,jdbcType=BIGINT}

    </delete>

    <select id="get" parameterType="long" resultMap="user">
        SELECT
        <include refid="sysUserColumns"/>
        FROM t_sys_user user_
        WHERE user_.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="getUserWithAuth" parameterType="long" resultMap="userWithAuth">
        SELECT
        <include refid="sysUserColumns"/>
        FROM t_sys_user user_
        WHERE user_.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="list" resultMap="user">
        SELECT
        <include refid="sysUserColumns"/>
        FROM t_sys_user user_
        order by id desc
    </select>


    <insert id="save" parameterType="com.arc.core.model.domain.system.SysUser" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO t_sys_user (
                    nickname,
                    avatar,
                    state,
                    create_date,
                    update_date
        )
        VALUES (
                    #{nickname,jdbcType=VARCHAR},
                    #{avatar,jdbcType=VARCHAR},
                    #{state,jdbcType=INTEGER},

                    now(),
                    now()
        )
    </insert>
<!--             #{createDate,jdbcType=TIMESTAMP},-->
<!--             #{updateDate,jdbcType=TIMESTAMP};-->

    <update id="update" parameterType="com.arc.core.model.domain.system.SysUser">
        UPDATE t_sys_user
        <set>
            update_date = now() ,
            <if test="nickname != null and nickname != ''">`nickname` = #{nickname,jdbcType=VARCHAR},</if>
            <if test="avatar != null and avatar != ''">`avatar` = #{avatar, jdbcType=VARCHAR},</if>
            <if test="state != null  ">state = #{state,jdbcType=INTEGER},</if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

</mapper>
